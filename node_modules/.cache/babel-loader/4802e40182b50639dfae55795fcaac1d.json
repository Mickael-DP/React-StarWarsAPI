{"ast":null,"code":"var _jsxFileName = \"C:\\\\env_dev\\\\React-StarWarsAPI\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-1fe19-default-rtdb.europe-west1.firebasedatabase.app/movies.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await response.json();\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-1fe19-default-rtdb.europe-west1.firebasedatabase.app/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","transformedMovies","results","map","movieData","episode_id","opening_crawl","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length"],"sources":["C:/env_dev/React-StarWarsAPI/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const fetchMoviesHandler = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch('https://react-http-1fe19-default-rtdb.europe-west1.firebasedatabase.app/movies.json');\n\n            if (!response.ok) {\n                throw new Error('Something went wrong');\n            }\n\n            const data = await response.json();\n\n            const loadedMovies = [];\n\n            for (const key in data){\n                loadedMovies.push({\n                    id: key,\n                    title: data[key].title,\n                    openingText: data[key].openingText,\n                    releaseDate: data[key].releaseDate,\n                });\n            }\n\n\n            const transformedMovies = data.results.map((movieData) => {\n                return {\n                    id: movieData.episode_id,\n                    title: movieData.title,\n                    openingText: movieData.opening_crawl,\n                    releaseDate: movieData.release_date,\n                };\n            });\n            setMovies(transformedMovies);\n        } catch (error) {\n            setError(error.message);\n        }\n        setIsLoading(false);\n\n    }, []);\n\n    useEffect(() => {\n        fetchMoviesHandler();\n    }, [fetchMoviesHandler]);\n\n    async function addMovieHandler(movie){\n      const response = await  fetch('https://react-http-1fe19-default-rtdb.europe-west1.firebasedatabase.app/movies.json', {\n            method: 'POST',\n            body: JSON.stringify(movie),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n      const data = await response.json()\n        console.log(data)\n    }\n\n    let content = <p>Found no movies.</p>;\n    if (movies.length > 0) {\n        content = <MoviesList movies={movies}/>\n    }\n\n    if (error) {\n        content = <p>{error}</p>\n    }\n\n    if (isLoading) {\n        content = <p>Loading...</p>\n    }\n    return (\n        <React.Fragment>\n            <section>\n                <AddMovie onAddMovie={addMovieHandler} />\n            </section>\n            <section>\n                <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n            </section>\n            <section>\n                {content}\n            </section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}